@model NotesProductVM

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">
                    @(Model.NotesProduct.Id != 0 ? "Update" : "Create") Product
                </h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post" class="row" enctype="multipart/form-data">
            <input asp-for="NotesProduct.Id" hidden />
            <div class="row">
                <div class="col-10">
                    <div class="border p-3">
                        <div class="form-floating py-2 col-12">
                            <input asp-for="NotesProduct.Title" class="form-control border-0 shadow" />
                            <label asp-for="NotesProduct.Title" class="ms-2"></label>
                            <span asp-validation-for="NotesProduct.Title" class="text-danger"></span>
                        </div>
                        <div class="py-2 col-12">
                            <label asp-for="NotesProduct.Description" class="ms-2"></label>
                            <textarea asp-for="NotesProduct.Description" class="form-control border-0 shadow"></textarea>
                            <span asp-validation-for="NotesProduct.Description" class="text-danger"></span>
                        </div>
                        <div class="py-2 col-12">
                            @if (Model.NotesProduct.Id != 0)
                            {
                                <label asp-for="NotesProduct.UpdatedDate" disabled class="ms-2"></label>
                                <input asp-for="NotesProduct.UpdatedDate" disabled class="form-control border-0 shadow" />
                                <span asp-validation-for="NotesProduct.UpdatedDate" class="text-danger"></span>
                            }
                            else 
                            {
                                <label asp-for="NotesProduct.CreatedDate" disabled class="ms-2"></label>
                                <input asp-for="NotesProduct.CreatedDate" disabled class="form-control border-0 shadow" />
                                <span asp-validation-for="NotesProduct.CreatedDate" class="text-danger"></span>
                            }
                        </div>
                        <div class="form-floating py-2 col-12">
                            <select asp-for="@Model.NotesProduct.CategoryId" asp-items="@Model.CategoryList" class="form-select border-0 shadow">
                                <option disabled selected>--Selcet DifCategory--</option>
                            </select>
                            <label asp-for="NotesProduct.CategoryId" class="ms-2"></label>
                            <span asp-validation-for="NotesProduct.CategoryId" class="text-danger"></span>
                        </div>
                        <div class="row pt-2">
                            <div class="col-6 col-md-3">
                                @if (Model.NotesProduct.Id != 0)
                                {
                                    <button type="submit" class="btn btn-primary form-control">Update</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary form-control">Create</button>
                                }
                            </div>
                            <div class="col-6 col-md-3">
                                <a asp-controller="NotesProduct" asp-action="Index" class="btn btn-outline-primary border form-control">
                                    Back to List
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


@* @section Scripts
{
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'lists', 'table', 'visualblocks', 'wordcount',
                // Your account includes a free trial of TinyMCE premium features
                // Try the most popular premium features until Oct 24, 2024:
                'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent |',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
} *@